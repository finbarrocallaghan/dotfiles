#-------------------------------------------------------------------------
#- usage
#-------------------------------------------------------------------------

set -g default-shell /usr/bin/zsh
#set default-path "$PWD"

set -sg escape-time 0


#unbind C-b
#set -g prefix C-a
#bind C-a send-prefix

# disable flow control (annoying)
#unbind C-s
#unbind C-q

set -g default-terminal "screen-256color"

set-window-option -g mode-keys vi
set-window-option -g mode-mouse off

set -g history-limit 100000
set -g bell-action any
set -g display-panes-time 500
set -g set-titles on
set -g aggressive-resize on
#set -g set-titles-string "#T #I #W" #T - host, #I window number, #W - window #title?
set -g set-titles-string ""
set-window-option -g automatic-rename on

set -g display-time 2000


#-------------------------------------------------------------------------
#-  looks
#-------------------------------------------------------------------------

set -g pane-active-border-fg blue

setw -g utf8 on

set -g status-utf8 on
set -g status-interval 10

set -g status-fg white
set -g status-bg default
set -g status-left "#[fg=colour8]#(whoami)@#H #[fg=colour11] #S #[default]"
set -g status-right "#[fg=white] #(date "+%-d/%-m/%y") #[fg=colour14]%H:%M:%S #[default]"

set -g status-left-length 100
set -g status-right-length 50
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour10
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr dim


#-------------------------------------------------------------------------
#- bindings
#-------------------------------------------------------------------------

bind-key S split-window -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"



#set -g terminal-overrides 'xterm*:smcup@:rmcup:'

bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

#copy tmux paste buffer to clipboard
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
#copy clipboard to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer --- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

bind-key 'a' last-window

bind 'h' swap-window -t -
bind 'l' swap-window -t +

bind 'j' command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind 'k' command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind '@' command-prompt -p "send pane to:"  "join-pane -t ':%%'"

bind 'n' next-layout
bind 'u' capture-pane \; save-buffer /tmp/tmux-buffer \; split-window -l 10 "cat /tmp/tmux-buffer | urlscan"

bind -r J swap-pane -D
bind -r K swap-pane -U


bind Escape copy-mode
bind -t vi-copy 'y' copy-selection


# pane zoom
bind '+' new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
bind '-' last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom


bind '/' command-prompt "split-window 'exec man %%'"  #man
bind '~' split-window "exec zsh -c 'htop -u fifr'" #htop


bind-key 'Space' next-window

# meta left/right cycles windows
bind-key -n M-right next
bind-key -n M-left prev

bind-key M-1 select-layout even-horizontal
bind-key M-2 select-layout even-vertical
bind-key M-3 select-layout main-horizontal
bind-key M-4 select-layout main-vertical
bind-key M-5 select-layout tiled
bind-key M-6 select-layout 3a34,279x79,0,0[279x59,0,0,279x19,0,60]


bind r source-file ~/.tmux.conf
